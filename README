--

30 JUNE 2020

a simple bash script and helper to accept incoming ssh traffic using port forwarding on router using a dynamic dns through digital ocean, following 

	* https://surdu.me/2019/07/28/digital-ocean-ddns.html

  steps:

	+ get digital ocean API token
	+ set up a project (using O-R-G)
	+ add dns record (A) to point to basement.o-r-g.net
	  this dns record is what is updated by a local bash script
	+ get id of dns record 
	+ run update-dns.sh
	+ set up cron job to keep do dns current
	+ configure port forwarding on router (airport basestation)

+ get d-o API token

	* https://www.digitalocean.com/docs/apis-clis/api/create-personal-access-token/

+ add d-o dns record

  	# somewhere.com points to 10.0.1.1

+ get id of dns record, using a new script which pings d-o API

	> ./get-dns-id.sh

+ add id and token to update-dns.sh, and run

	> ./update-dns.sh

+ configure port forwarding on router (airport basestation) following:

	* https://discussions.apple.com/docs/DOC-3415

  steps: 

	+ reserve DHCP static ip for local computer to be accessed
	+ direct all traffic from external port 22 to this (local) static ip

  requires MAC address, findable in System Prefs: Network and static local ip. 
  get all local ips on network with MAC addresses:

	> arp -a

	# xx:xx:xx:xx:xx:xx
	# 10.0.1.x

  now set up port forwarding

	# choose "Remote Login - SSH" 
	  (public TCP, port 22 points to local static ip)

  restart basestation

+ connect via ssh (requires sshd running on local, aka "remote login" in Sharing)

	> ssh someone@somewhere.com

+ install update-dns.sh to /usr/local/bin

    > cp update-do-dns.sh /usr/local/bin/update-do-dns
 
+ set up cron job to keep d-o dns updated, running every 5 minutes (writes to log)

	> crontab -e

	*/5 * * * * /usr/local/bin/update-do-dns >> /Users/me/update-do-dns-log.txt

** done **
